{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEGION\\\\Desktop\\\\Batches\\\\LPU2\\\\Reactt\\\\Projects\\\\Todo 2.0\\\\todo2.0\\\\src\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Inbox(props) {\n  _s();\n  const [newTask, setNewTask] = useState(false);\n  const titleRef = useRef(\"\");\n  const calendarRef = useRef(\"\");\n  const newtaskHandler = () => {\n    setNewTask(true);\n  };\n  const addHandler = e => {\n    e.preventDefault();\n    if (titleRef.current.value === \"\") {\n      window.alert(\"task cannot be empty\");\n      return;\n    }\n    let newObj = {\n      number: props.list.length + 1,\n      title: titleRef.current.value,\n      date: new Date(calendarRef.current.value)\n    };\n    pr;\n  };\n  const cancelHandler = () => {\n    setNewTask(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"INBOX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 8\n    }, this), !newTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: newtaskHandler,\n      children: \"+Add New\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), newTask && /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        ref: titleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addHandler,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cancelHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          ref: calendarRef,\n          defaultValue: \"2023-01-01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.list.map(list => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [list.title, \" (\", list.date.toLocaleDateString(), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this)\n        }, list.number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(Inbox, \"Q5jfdBNcYWC4tzxFzcQkNwQqMOQ=\");\n_c = Inbox;\nvar _c;\n$RefreshReg$(_c, \"Inbox\");","map":{"version":3,"names":["React","useRef","useState","Inbox","props","newTask","setNewTask","titleRef","calendarRef","newtaskHandler","addHandler","e","preventDefault","current","value","window","alert","newObj","number","list","length","title","date","Date","pr","cancelHandler","map","toLocaleDateString"],"sources":["C:/Users/LEGION/Desktop/Batches/LPU2/Reactt/Projects/Todo 2.0/todo2.0/src/Inbox.js"],"sourcesContent":["import React, { useRef, useState } from 'react'\r\n\r\nexport default function Inbox(props) {\r\n    const [newTask,setNewTask] = useState(false)\r\n    const titleRef = useRef(\"\")\r\n    const calendarRef = useRef(\"\")\r\n    const newtaskHandler =()=>{\r\n       setNewTask(true)\r\n    }\r\n    const addHandler =(e)=>{\r\n      e.preventDefault()\r\n      if(titleRef.current.value === \"\"){\r\n        window.alert(\"task cannot be empty\")\r\n        return\r\n      }\r\n      let newObj = {\r\n        number :   props.list.length+1,\r\n        title :   titleRef.current.value,\r\n        date :   new Date(calendarRef.current.value),\r\n      }\r\n      pr\r\n    }\r\n    const cancelHandler=()=>{\r\n        setNewTask(false)\r\n    }\r\n  return (\r\n    <div>\r\n       <h2>INBOX</h2>\r\n       {!newTask && (\r\n        <button onClick={newtaskHandler}>+Add New</button>\r\n       )}\r\n       {newTask && (\r\n        <form>\r\n            <input type=\"text\" ref={titleRef} />\r\n            <div>\r\n                <button onClick={addHandler}>Add Task</button>\r\n                <button onClick={cancelHandler}>Cancel</button>\r\n                <input type=\"date\" ref={calendarRef} defaultValue=\"2023-01-01\" />\r\n            </div>\r\n        </form>\r\n       )}\r\n       <div>\r\n        {props.list.map((list)=>{\r\n            return (\r\n                <div key={list.number}>\r\n                  <div>\r\n                    {list.title} ({list.date.toLocaleDateString()})\r\n                  </div>\r\n                </div>\r\n            )\r\n        })}\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAA;AAE/C,eAAe,SAASC,KAAK,CAACC,KAAK,EAAE;EAAA;EACjC,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGJ,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAMK,QAAQ,GAAGN,MAAM,CAAC,EAAE,CAAC;EAC3B,MAAMO,WAAW,GAAGP,MAAM,CAAC,EAAE,CAAC;EAC9B,MAAMQ,cAAc,GAAE,MAAI;IACvBH,UAAU,CAAC,IAAI,CAAC;EACnB,CAAC;EACD,MAAMI,UAAU,GAAGC,CAAC,IAAG;IACrBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAGL,QAAQ,CAACM,OAAO,CAACC,KAAK,KAAK,EAAE,EAAC;MAC/BC,MAAM,CAACC,KAAK,CAAC,sBAAsB,CAAC;MACpC;IACF;IACA,IAAIC,MAAM,GAAG;MACXC,MAAM,EAAKd,KAAK,CAACe,IAAI,CAACC,MAAM,GAAC,CAAC;MAC9BC,KAAK,EAAKd,QAAQ,CAACM,OAAO,CAACC,KAAK;MAChCQ,IAAI,EAAK,IAAIC,IAAI,CAACf,WAAW,CAACK,OAAO,CAACC,KAAK;IAC7C,CAAC;IACDU,EAAE;EACJ,CAAC;EACD,MAAMC,aAAa,GAAC,MAAI;IACpBnB,UAAU,CAAC,KAAK,CAAC;EACrB,CAAC;EACH,oBACE;IAAA,wBACG;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,EACb,CAACD,OAAO,iBACR;MAAQ,OAAO,EAAEI,cAAe;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QACzC,EACAJ,OAAO,iBACP;MAAA,wBACI;QAAO,IAAI,EAAC,MAAM;QAAC,GAAG,EAAEE;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eACpC;QAAA,wBACI;UAAQ,OAAO,EAAEG,UAAW;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAS,eAC9C;UAAQ,OAAO,EAAEe,aAAc;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS,eAC/C;UAAO,IAAI,EAAC,MAAM;UAAC,GAAG,EAAEjB,WAAY;UAAC,YAAY,EAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC/D;IAAA;MAAA;MAAA;MAAA;IAAA,QAEV,eACD;MAAA,UACEJ,KAAK,CAACe,IAAI,CAACO,GAAG,CAAEP,IAAI,IAAG;QACpB,oBACI;UAAA,uBACE;YAAA,WACGA,IAAI,CAACE,KAAK,EAAC,IAAE,EAACF,IAAI,CAACG,IAAI,CAACK,kBAAkB,EAAE,EAAC,GAChD;UAAA;YAAA;YAAA;YAAA;UAAA;QAAM,GAHER,IAAI,CAACD,MAAM;UAAA;UAAA;UAAA;QAAA,QAIf;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACG;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV;AAAC,GApDuBf,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
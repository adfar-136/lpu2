{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEGION\\\\Desktop\\\\Batches\\\\LPU2\\\\Reactt\\\\Projects\\\\Todo 2.0\\\\todo2.0\\\\src\\\\Inbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function INBOX(props) {\n  _s();\n  const [newTask, setNewTask] = useState(false);\n  const titleRef = useRef(\"\");\n  const calendarRef = useRef(\"\");\n  const newTaskHandler = () => {\n    setNewTask(true);\n  };\n  const addHandler = e => {\n    e.preventDefault();\n    if (titleRef.current.value === \"\") {\n      window.alert(\"Please enter a title\");\n      return;\n    }\n    let newObj = {\n      number: props.list.length + 1,\n      title: titleRef.current.value,\n      date: new Date(calendarRef.current.value)\n    };\n    props.append(newObj);\n    setNewTask(false);\n  };\n  const cancelHandler = () => {\n    setNewTask(false);\n    calendarRef.current.focus();\n    calendarRef.current.blur();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"INBOX\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), !newTask && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: newTaskHandler,\n      children: \"+AddNew\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this), newTask && /*#__PURE__*/_jsxDEV(\"form\", {\n      action: \"\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"\",\n        id: \"\",\n        ref: titleRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addHandler,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cancelHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          ref: calendarRef,\n          defaultValue: \"2023-01-01\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.list.map(list => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [list.title, \"(\", list.date.toLocaleDateString(), \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, list.number, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(INBOX, \"l7QD5xF9A+Ryi4msv8uvkwqRMv0=\");\n_c = INBOX;\nvar _c;\n$RefreshReg$(_c, \"INBOX\");","map":{"version":3,"names":["React","useState","useRef","INBOX","props","newTask","setNewTask","titleRef","calendarRef","newTaskHandler","addHandler","e","preventDefault","current","value","window","alert","newObj","number","list","length","title","date","Date","append","cancelHandler","focus","blur","location","reload","map","toLocaleDateString"],"sources":["C:/Users/LEGION/Desktop/Batches/LPU2/Reactt/Projects/Todo 2.0/todo2.0/src/Inbox.js"],"sourcesContent":["\r\nimport React, { useState, useRef } from \"react\";\r\n\r\nexport default function INBOX(props) {\r\n  const [newTask, setNewTask] = useState(false);\r\n  const titleRef = useRef(\"\");\r\n  const calendarRef = useRef(\"\");\r\n  const newTaskHandler = () => {\r\n    setNewTask(true);\r\n  };\r\n  const addHandler = (e) => {\r\n    e.preventDefault();\r\n    if (titleRef.current.value === \"\") {\r\n      window.alert(\"Please enter a title\");\r\n      return;\r\n    }\r\n    let newObj = {\r\n      number: props.list.length + 1,\r\n      title: titleRef.current.value,\r\n      date: new Date(calendarRef.current.value),\r\n    };\r\n    props.append(newObj);\r\n    setNewTask(false);\r\n  };\r\n  const cancelHandler = () => {\r\n    setNewTask(false);\r\n    calendarRef.current.focus();\r\n    calendarRef.current.blur();\r\n    window.location.reload();\r\n  };\r\n  return (\r\n    <div>\r\n      <h2>INBOX</h2>\r\n      {!newTask && <button onClick={newTaskHandler}>+AddNew</button>}\r\n      {newTask && (\r\n        <form action=\"\">\r\n          <input type=\"text\" name=\"\" id=\"\" ref={titleRef} />\r\n          <div>\r\n            <button onClick={addHandler}>Add Task</button>\r\n            <button onClick={cancelHandler}>Cancel</button>\r\n            <input\r\n              type=\"date\"\r\n             \r\n              ref={calendarRef}\r\n              defaultValue=\"2023-01-01\"\r\n            />\r\n          </div>\r\n        </form>\r\n      )}\r\n      <div>\r\n        {props.list.map((list) => {\r\n          return (\r\n            <div key={list.number}>\r\n              <div>\r\n                {list.title}({list.date.toLocaleDateString()})\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  )}"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC;AAEhD,eAAe,SAASC,KAAK,CAACC,KAAK,EAAE;EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMM,QAAQ,GAAGL,MAAM,CAAC,EAAE,CAAC;EAC3B,MAAMM,WAAW,GAAGN,MAAM,CAAC,EAAE,CAAC;EAC9B,MAAMO,cAAc,GAAG,MAAM;IAC3BH,UAAU,CAAC,IAAI,CAAC;EAClB,CAAC;EACD,MAAMI,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIL,QAAQ,CAACM,OAAO,CAACC,KAAK,KAAK,EAAE,EAAE;MACjCC,MAAM,CAACC,KAAK,CAAC,sBAAsB,CAAC;MACpC;IACF;IACA,IAAIC,MAAM,GAAG;MACXC,MAAM,EAAEd,KAAK,CAACe,IAAI,CAACC,MAAM,GAAG,CAAC;MAC7BC,KAAK,EAAEd,QAAQ,CAACM,OAAO,CAACC,KAAK;MAC7BQ,IAAI,EAAE,IAAIC,IAAI,CAACf,WAAW,CAACK,OAAO,CAACC,KAAK;IAC1C,CAAC;IACDV,KAAK,CAACoB,MAAM,CAACP,MAAM,CAAC;IACpBX,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EACD,MAAMmB,aAAa,GAAG,MAAM;IAC1BnB,UAAU,CAAC,KAAK,CAAC;IACjBE,WAAW,CAACK,OAAO,CAACa,KAAK,EAAE;IAC3BlB,WAAW,CAACK,OAAO,CAACc,IAAI,EAAE;IAC1BZ,MAAM,CAACa,QAAQ,CAACC,MAAM,EAAE;EAC1B,CAAC;EACD,oBACE;IAAA,wBACE;MAAA,UAAI;IAAK;MAAA;MAAA;MAAA;IAAA,QAAK,EACb,CAACxB,OAAO,iBAAI;MAAQ,OAAO,EAAEI,cAAe;MAAA,UAAC;IAAO;MAAA;MAAA;MAAA;IAAA,QAAS,EAC7DJ,OAAO,iBACN;MAAM,MAAM,EAAC,EAAE;MAAA,wBACb;QAAO,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,EAAE;QAAC,EAAE,EAAC,EAAE;QAAC,GAAG,EAAEE;MAAS;QAAA;QAAA;QAAA;MAAA,QAAG,eAClD;QAAA,wBACE;UAAQ,OAAO,EAAEG,UAAW;UAAA,UAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAS,eAC9C;UAAQ,OAAO,EAAEe,aAAc;UAAA,UAAC;QAAM;UAAA;UAAA;UAAA;QAAA,QAAS,eAC/C;UACE,IAAI,EAAC,MAAM;UAEX,GAAG,EAAEjB,WAAY;UACjB,YAAY,EAAC;QAAY;UAAA;UAAA;UAAA;QAAA,QACzB;MAAA;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QAET,eACD;MAAA,UACGJ,KAAK,CAACe,IAAI,CAACW,GAAG,CAAEX,IAAI,IAAK;QACxB,oBACE;UAAA,uBACE;YAAA,WACGA,IAAI,CAACE,KAAK,EAAC,GAAC,EAACF,IAAI,CAACG,IAAI,CAACS,kBAAkB,EAAE,EAAC,GAC/C;UAAA;YAAA;YAAA;YAAA;UAAA;QAAM,GAHEZ,IAAI,CAACD,MAAM;UAAA;UAAA;UAAA;QAAA,QAIf;MAEV,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QACE;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AACP;AAAC,GA1DoBf,KAAK;AAAA,KAALA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
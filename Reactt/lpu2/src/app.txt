function App() {
  return (
   <div>
    {header}
    {header}  
    {main}
    {footer}
   </div>
  );
}
const headerStyle = {
  border:'2px solid orange',
  backgroundColor:"green"
}
const mainStyle = {
  border:'2px solid orange',
  backgroundColor:"blue"
}
const welcome = "Welcome to 30 days of react"
const title = "react classes"
const author = "Adfar Rasheed"
const header = (
  <header style={headerStyle}>
    <h1>{welcome}</h1>
    <h1>{title}</h1>
    <h3>{author}</h3>
  </header>
)
const main = (
   <main style={mainStyle}>
    <p>Anything</p>
    <h1>This is my main section</h1>
    <small>Nothing so serious</small>
   </main>
)
const footer = (
  <footer style={{border:'2px solid orange',backgroundColor:"green"}}>
    <p>Copyright reserved by Adfar rasheed</p>
  </footer>
)

export default App;




import About from "./components/About"
import Header from "./components/Header"
function App(){
  let age =25
  let skills = ["html","css","js"]
  const data = {
    welcome : "welcome to react classes",
    title : "Starting react",
    Author : "Adfar Rashid"
  }
  return (
    <div>
      <About name="Adfar" age={age} skills={skills} data = {data}/>
      
    
      <Header name="Header" />
      
    </div>
  )
}
export default App



import React from 'react'
function Elem1(){
  return <h1>Hi i am element 1</h1>
}
function Elem2(){
  return <h1>Hi i am element 2</h1>
  
}
function Realoutput(props){
   const isoutput = props.isoutput
   if(isoutput){
    return <Elem1/>
   }
   else{
    return <Elem2/>
   }
}
export default function App() {
  return (
    <div>
       <Realoutput isoutput={true}/>
    </div>
  )
}




import React, { Component } from 'react'

export default class App extends Component {
 constructor(){
  super()
  this.state = {
    count : 0,
  }
 }
 addOne =() => {
  this.setState({count:this.state.count + 1})
 }
 addten = ()=>{
  this.setState({count:this.state.count + 10})
 
 }
 minusOne =() => {
  this.setState({count:this.state.count - 1})
 }
 minusten = ()=>{
  this.setState({count:this.state.count - 10})
 
 }
  render() {
    return (
      <div>
        <h1>{this.state.count}</h1>
        <button onClick = {this.addOne}>Add</button>
        <button onClick = {this.addten}>Addby10</button>
        <button onClick = {this.minusOne}>minus</button>
        <button onClick = {this.minusten}>minusby10</button>
      </div>
    )
  }
}



//TEXT UTILS APP4


import React, { useState } from 'react'

export default function Message() {
    const [text,setText] = useState("")
    function onChange(e){
        setText(e.target.value)
    }
    const onUpper =()=>{
        let upper = text.toUpperCase()
        setText(upper)
    }
    const onLower = ()=>{
        let lower = text.toLowerCase()
        setText(lower)
    }
    const onClear = ()=>{
        setText("")
    } 
    const onCopy =()=>{
        let Text = document.getElementById("box")
        console.log(Text)
        Text.select()
        navigator.clipboard.writeText(Text.value)
    }
  return (
    <div className='container my-3'>
       
<div  className="mb-3">
  <label htmlFor="exampleFormControlTextarea1" className="form-label">Anything Textbox</label>
  <textarea value={text}  className="form-control" 
  id="box" rows="9" onChange={(e)=>{onChange(e)}}></textarea>
</div>
<button type="button" className="btn btn-primary" onClick={onUpper}>UpperCase</button>
<button type="button" className="btn btn-secondary" onClick={onLower}>LowerCase</button>
<button type="button" className="btn btn-success" onClick={onClear}>Clear</button>
<button  type="button" className="btn btn-danger" onClick={onCopy}>Copy</button>
    <div>
        <h1>Your Text Summary</h1>
        <p>{text.split(" ").length} words and {text.length} letters</p>
    </div>
    </div>
  )
}


import React from 'react'
import About from './text/About'
import Message from './text/Message'

export default function App() {
  return (
    <div>
      {/* <About/> */}
      <Message/>
    </div>
  )
}




import React, { Component } from 'react'

export default class App extends Component {
  constructor(props){
    super(props)
    this.name = React.createRef()
    this.password = React.createRef()
  }
  submitHandler(event){
     event.preventDefault()
     console.log(this.name.current.value,this.name.current,this.password.current,this.password.current.value)
  }
  render() {
    return (
      <div>
        <form onSubmit={(event)=>{this.submitHandler(event)}}>
          <h1>Uncontrolled Components</h1>
          <input type="text" placeholder='Enter name' ref={this.name} /> <br /><br />
          <input type="password" placeholder='Enter password' ref={this.password}/> <br /><br />
          <input type="submit" value="Submit" />
        </form>
      </div>
    )
  }
}




import React, { useRef } from 'react'

export default function App() {
  const input = useRef()
  function handleSubmit(){
      alert(`Name : ${input.current.value}`)
  }
  return (
    <div>
      <form onSubmit={handleSubmit}>
        <input type="text" placeholder='Enter Name' ref={input} />
        <button type='submit'>Submit</button>
      </form>
    </div>
  )
}



import React, { Component } from 'react'

export default class App extends Component {
constructor(props){
 super(props)
 this.state = {
  name : "",
  password : "",
 }
}
 submit(e){
  e.preventDefault()
    console.log(this.state)
 }
  render() {
    return (
      <div>
        <form>
          <input onChange={(e)=>{this.setState({name:e.target.value})}} type="text" placeholder='Name' />
          <input onChange={(event)=>{this.setState({password:event.target.value})}} type="password" placeholder='Password' />
          <button onClick={(e)=>{this.submit(e)}}>Submit</button>
        </form>
      </div>
    )
  }
}



import React, { Component } from 'react'
const User = ({firstName})=>(
  <div>
    <h1>Hello {firstName}</h1>
  </div>
)
export default class App extends Component {
  constructor(props){
    super(props)
    console.log("constructor called")
    this.state = {
      firstName : "Nipun"
    }
  }
  static getDerivedStateFromProps(props,state){
    console.log("derived method called")
    return {firstName:props.someName}
}
  render() {
    console.log("render method called")
    return (
      <div>
        <User firstName={this.state.firstName}/>
      </div>
    )
  }
}


import React, { Component } from 'react'

export default class App extends Component {
  constructor(props){
    super(props)
    console.log("Constructor called")
    this.state = {
      firstName : "Nipun"
    }
  }
  componentDidMount(){
        console.log("Component did mount called")
        setTimeout(()=>{
          this.setState({
            firstName : "Adfar"
          })
        },3000)
  }
  render() {
    return (
      <div>
        <h1>{this.state.firstName}</h1>
      </div>
    )
  }
}




import React, { Component } from 'react'

export default class App extends Component {
  constructor(props){
    super(props)
    this.state = {
      firstName : "adfar",
      data : 1
    }
  }
  dochallenge = ()=>{
    this.setState({
      data : this.state.data + 1
    })
  }
  shouldComponentUpdate(nextProps,nextState){
    console.log(nextState.data)
    if(nextState.data >= 20){
    return false
    }  else{
      return true
    }
  }
  componentDidUpdate(prevProps,prevState){
    if(prevState.data === 16){
      this.setState({
        firstName : "Congratulation on completing the challenge"
      })
    }
    console.log(prevProps,prevState)
  }
  render() {
    return (
      <div>
        <h1>{this.state.data}</h1>
        <button onClick={this.dochallenge}>Click Me</button>
      </div>
    )
  }
}

import React, { Component } from 'react'
import "./App.css"
export default class App extends Component {
  constructor(props){
    super(props)
    this.state = {
      isclassActive : false,
    }
  }
  toggle=()=>{
    this.setState({isclassActive:!this.state.isclassActive})
  }
  render() {
    return (
      <div>
        <div>
          <h1 className={this.state.isclassActive?"active":""}>Adfar Rasheed</h1>
          <button onClick={this.toggle}>Click Me</button>
        </div>
      </div>
    )
  }
}


import React, { Component } from 'react'
import "./App.css"
export default class App extends Component {
  constructor(props){
    super()
    this.state ={
      currentClass : "black"
    }
  }
  blue=()=>{
    this.setState({
      currentClass:"Blue"
    })
  }
  red=()=>{
    this.setState({
      currentClass:"Red"
    })
  }
  render() {
    return (
      <div>
        <h1 className={this.state.currentClass}>Adfar Rasheed</h1>
        <button onClick={this.black}>Black</button>
        <button onClick={this.blue}>Blue</button>
        <button onClick={this.green}>Green</button>
        <button onClick={this.red}>Red</button>
        <button onClick={this.orange}>Orange</button>
      </div>
    )
  }
}


import React, { useState } from 'react'
import { useEffect } from 'react'

export default function App() {
  const [count,setcount]= useState(0)
  const [number,setNumber] = useState(0)
  // useEffect(()=>{
  //   console.log("effect called")
  // },[])
  useEffect(()=>{
    console.log("effect called")
  },[count])
  return (
    <div>
      <h1>{count}</h1>
      <h1>{number}</h1>
      <button onClick={()=>{setcount(count+1)}}>click me</button>
      <button onClick={()=>{setNumber(number+1)}}>click me</button>
    </div>
  )
}


import React, { useState } from 'react'
import { useEffect } from 'react'

export default function App() {
  const [count,setcount]= useState(0)
  const [number,setNumber] = useState(0)
  // useEffect(()=>{
  //   console.log("effect called")
  // },[])
  
  
  //  useEffect(()=>{
  //   console.log("1")
  //   const eventhandler = ()=> console.log("Hi Adfar")
  //   document.addEventListener("click",eventhandler)
  //   return ()=>{
  //     console.log("2")
  //     document.removeEventListener("click",eventhandler)
  //   }
  //  })
  useEffect(()=>{
   const interval =  setInterval(()=>{
      console.log("Hello Adfar");
    },3000)
    return ()=>{
      clearInterval(interval)
    }
  },[count])
  return (
    <div>
      <h1>{count}</h1>
      <h1>{number}</h1>
      <button onClick={()=>{setcount(count+1)}}>click me</button>
      <button onClick={()=>{setNumber(number+1)}}>click me</button>
    </div>
  )
}


import React from 'react'
import { useReducer } from 'react'
const counterReducer = (state,action)=>{
  console.log("State :", state)
  console.log("action :", action)
  // if(action.type === "adfar"){
  //   return {count:state.count +1}
  // } else if(action.type==="Aman"){
  //   return {count:state.count +2 }
  // }
  switch(action){
    case "add":
      return state + 1;
    case "sub":
      return state - 1;
    case "reset":
      return 0;
    default:
      throw new Error("unexpected Action")
  }
}
export default function App() {
  // const [count,setcount]= useState(0)
  const [state,dispatch] = useReducer(counterReducer,0)
  //useReducer hook
  return (
    <div>
      <h1>{state}</h1>
      {/* <button onClick={()=>{dispatch({type:"adfar"})}}>Change State</button>
      <button onClick={()=>{dispatch({type:"Aman"})}}>Change two</button> */}
      <button onClick={()=>{dispatch("add")}}>Add</button>
      <button onClick={()=>{dispatch("sub")}}>Subtract</button><button onClick={()=>{dispatch({type:"adfar"})}}>Change State</button>
      <button onClick={()=>{dispatch("reset")}}>reset</button>
    </div>
  )
}

import React from 'react'
import { createContext } from 'react'
import CompA from './components/context/CompA'
const FirstName = createContext()
const LastName = createContext()
export default function App() {
  return (
    <div>
      <FirstName.Provider value={"Adfar"}>
        <LastName.Provider value={"rasheed"}>
         <CompA/>   
        </LastName.Provider>
      </FirstName.Provider>
    </div>
  )
}
export {FirstName,LastName}


import React from 'react'
import { useMemo } from 'react'
import { useState } from 'react'

export default function App() {
  const [counterOne, setCounterOne] = useState(0)
  const [counterTwo, setCounterTwo] = useState(0)
  const incrementOne =()=>{
    setCounterOne(counterOne+1)
  }
  const isEven =useMemo(()=>{
    let i=0;
    while(i<2000000000) i++
    return counterOne%2 === 0
  },[counterOne])
  const incrementTwo =()=>{
    setCounterTwo(counterTwo+1)
  }
  return (
    <div>
      <button onClick={incrementOne}>CounterOne :{counterOne}</button> <br /><br />
      {/* <h1>{isEven()?"Even":"Odd"}</h1> */}
      <h1>{isEven?"Even":"Odd"}</h1>
      <button onClick={incrementTwo}>CounterTwo :{counterTwo}</button>
    </div>
  )
}

import React, { useCallback } from 'react'
import { useState } from 'react'
const x = new Set()
export default function App() {
  const [count,setCount] = useState(0)
  const [number, setnumber] = useState(0)
  const incrementCount =useCallback(()=>{
    setCount(count + 1)
  },[count])
  const decrementCount =useCallback(()=>{
    setCount(count - 1)
  },[count])
  const incrementNumber =useCallback(()=>{
    setnumber(number + 1)
  },[number])
  x.add(incrementCount)
  x.add(decrementCount)
  x.add(incrementNumber)
  alert(x.size)
  return (
    <div>
      <button onClick={incrementCount}>Increase Counter</button>
      <button onClick={decrementCount}>Decrease Counter</button>
      <button onClick={incrementNumber}>Increase Number</button>
    </div>
  )
}

import React from 'react'
import { BrowserRouter, Route, Routes } from 'react-router-dom'
import About from './Routes/About'
import Adfar from './Routes/Adfar'
import Contact from './Routes/Contact'
import Home from './Routes/Home'
import MainHome from './Routes/MainHome'
import "./App.css"
import Employee from './Routes/Employee'
import Error from './Routes/Error'
import Employeedetails from './Routes/Employeedetails'
import Search from './Routes/Search'
import List from './Routes/List'
export default function App() {
  return (
    <BrowserRouter>
       <Routes>
        {/* <Route path='/' element={<div>Home page</div>}/>
        <Route path = '/about' element={<div>About Page</div>}/>
        <Route path='/contact' element ={<div>Contact Page</div>}/>
        <Route path='/adfar' element={<div>Adfar's Page</div>}/> */}
         <Route path='/' element={<MainHome/>}>
            <Route index element={<Home/>}/>
            <Route path = 'about' element={<About/>}/>
            <Route path='/contact' element ={<Contact/>}>
              <Route path='search' element={<Search/>}/>
              <Route path='list' element={<List/>}/>
            </Route>
            <Route path='contact/search' element={<Search/>}/>
            <Route path='contact/list' element={<List/>}/>
            <Route path='adfar' element={<div><Adfar/></div>}/>
            <Route path="employee" element ={<Employee/>}/>
            <Route path="employee/:Eid" element={<Employeedetails/>}/>
            <Route path='*' element={<Error/>}/>
     </Route>
       </Routes>
    </BrowserRouter>
  )
}


import React from 'react'
import { useState } from 'react'

export default function App() {
  const [name,setName] = useState('')
  const [password,setPassword] = useState('')
  const handle=()=>{
    localStorage.setItem('Name',name)
    localStorage.setItem('Password',password)
  }
  const remove=()=>{
    localStorage.removeItem('Name')
    localStorage.removeItem('Password')
  }
  return (
    <div>
      <h1>Enter your name : </h1>
      <input type="text" placeholder='Name' value={name} onChange={(e)=>{setName(e.target.value)}}/>
      <h1>Password of the user : </h1>
      <input type="password" placeholder='Password' value={password} onChange={(e)=>{setPassword(e.target.value)}}/>
      <button onClick={handle}>Done</button>
      <div>
         {localStorage.getItem('Name') && (
          <div>
            Name  : <p>{localStorage.getItem('Name')}</p>
          </div>
         )}  
         {localStorage.getItem('Password') && (
          <div>
            Password  : <p>{localStorage.getItem('Password')}</p>
          </div>
         )}       
      </div>
      <div>
        <button onClick={remove}>Remove</button>
      </div>
    </div>
  )
}

import React from 'react'
import { useState } from 'react'

export default function App() {
  const [name,setName] =useState('')
  const [email,setemail] = useState('')
  const [password,setPassword] = useState('')
  const [isloggedIn,setIsloggedIn] = useState(false)
  const login = (e)=>{
    const userData = {
      name,
      email,
      password
    }
    localStorage.setItem('token-info',JSON.stringify(userData))
    setIsloggedIn(true)
    setName('')
    setemail('')
    setPassword('')
  }
  const logout=()=>{
    localStorage.removeItem('token-info')
    setIsloggedIn(false)
  }
  return (
    <div>
      <h1>This is local storage login logout</h1>
      {!isloggedIn ? (
        <form>
          <input type="text" onChange={(e)=>{setName(e.target.value)}} placeholder="Enter Name" value={name} />
          <input type="email" onChange={(e)=>{setemail(e.target.value)}} placeholder="Enter Email" value={email} />
          <input type="password" onChange={(e)=>{setPassword(e.target.value)}} placeholder="Enter Password" value={password} />
          <button onClick={login}>Login</button>
        </form>
      ) : (
        <>
        <h1>User is Logged In</h1>
        <button onClick={logout}>  Logout</button>
        </>
      )}
    </div>
  )
}


import React from 'react'
import { useState } from 'react'
import Like from './components/Like'
import UseCounter from './custom-hooks/Usecounter'
import useList from './custom-hooks/useList'

export default function App() {
  const {count,increment,decrement} = UseCounter()
  const {list,push,pull} = useList()
  const [todo, setTodo] = useState("")
  const onsubmithandler=(event)=>{
    event.preventDefault()
    push(todo)
    setTodo("")
  }
  return (
    <>
    <div>
      <h1>{count}</h1>
      <button onClick={increment}>Add</button>
      <button onClick={decrement}>Sub</button>
    </div>
    <div>
      <Like/>
    </div>
    <div>
      <header>
        <form onSubmit={(event)=>{onsubmithandler(event)}}>
          <label>Add Todo item</label>
          <input type="text" onChange={(e)=>{setTodo(e.target.value)}} value={todo}/>
          <button type="submit">Add Todo</button>
        </form>
        <h5>{list.map((listItem,listIndex)=>{
          return ( 
            <>
          <li key={listIndex}>{listItem}</li>
          <button onClick={()=>{pull(listIndex)}}>Remove</button>
          </>
          )
        })}
        </h5>
      </header>
    </div>
    </>
  )
}


import React, {Suspense, lazy } from 'react'


const Header = lazy(()=>import("./lazy-loading/Header.js"))
const About = lazy(()=>import("./lazy-loading/About.js"))

export default function App() {
  return (
    <div>
      <h1>Lazy Loading</h1>
      <Suspense fallback={<div>Araha hoon main.....</div>}>
        <Header/>
        
      </Suspense>
      <Suspense fallback={<div>Jarahan hoon main....</div>}>
        <About/>
        
      </Suspense>
      
           
    </div>
  )
}
